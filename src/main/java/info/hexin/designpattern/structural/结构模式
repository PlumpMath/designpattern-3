 设计模式之Facade
可扩展的使用JDBC针对不同的数据库编程,Facade提供了一种灵活的实现.

 设计模式之Proxy
以Jive为例,剖析代理模式在用户级别授权机制上的应用

 设计模式之Adapter
使用类再生的两个方式:组合(new)和继承(extends),这个已经在"thinking in java"中提到过.

 设计模式之Composite
就是将类用树形结构组合成一个单位.你向别人介绍你是某单位，你是单位中的一个元素，别人和你做买卖，相当于和单位做买卖。文章中还对Jive再进行了剖析。
 设计模式之Decorator
Decorator是个油漆工,给你的东东的外表刷上美丽的颜色.
 设计模式之Bridge
将"牛郎织女"分开(本应在一起,分开他们,形成两个接口),在他们之间搭建一个桥(动态的结合)
 设计模式之Flyweight
提供Java运行性能,降低小而大量重复的类的开销.